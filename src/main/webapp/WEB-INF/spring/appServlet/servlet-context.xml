<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>

	<!-- interceptor -->
	<beans:bean id="loginInterceptor" class="com.team.login.Interceptor.LoginInterceptor"></beans:bean>
	<beans:bean id="MemberInterceptor" class="com.team.member.Interceptor.MemberInterceptor"></beans:bean>
	
	
	<interceptors>
		<interceptor>
			<mapping path="/main"/>
			<mapping path="/**/mypage"/>
			<beans:ref bean = "loginInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/**/follower"/>
			<mapping path="/**/following"/>
			<mapping path="/**/gallery"/>
			<beans:ref bean = "MemberInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 파일업로드 필요한 bean -->
	<beans:bean id="multipartResolver" class ="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 용량 -->
		<beans:property name="maxUploadSize" value ="10485760" />
	</beans:bean>
	
	<!-- 파일업로드 위한 디렉토리 설정 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value ="D:\upload"/>
	</beans:bean>
	
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.team.member.snslogin.NaverLoginBO" />
	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="1019805565939-clpcv5ar1dn430k2ihe95mbs7t6pslif.apps.googleusercontent.com" />
		<beans:constructor-arg value="xD8_oyObClhzIf2lzUiRGPtL" />
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri" value="http://localhost:8080/TeamPro/oauth2callback" />
	</beans:bean>
	
	<context:component-scan base-package="com.team.*" />
</beans:beans>
